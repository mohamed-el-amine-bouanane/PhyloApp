/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vue2;
import java.awt.Image;
import javax.swing.ImageIcon;
import Model2.*;
import Model2.UPGMA;
import Model2.noeudE;
import Vue2.EspeceModel;
import Vue2.EspeceModelPainter;
import modele.GrandModele;

import java.awt.*;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import interfaceGraphique.FenetreFusion;

import static Model2.UPGMA.*;
/**
 *
 * @author pc
 */
public class Board extends javax.swing.JFrame {

    /**
     * Creates new form Board
     */
    public Board() {
        initComponents();
        String getSelectedImage = "./Assets/ui_projet.png";
        ImageIcon imIco = new ImageIcon(getSelectedImage);
        Image imFit = imIco.getImage();
        Image imgFit = imFit.getScaledInstance(PHoto.getWidth(), PHoto.getHeight(), Image.SCALE_SMOOTH);
        PHoto.setIcon(new ImageIcon(imgFit));
        getSelectedImage= "./Assets/MatriceSuiv.png";
        imIco = new ImageIcon(getSelectedImage);
        imFit = imIco.getImage();
        imgFit = imFit.getScaledInstance(PHoto.getWidth(), PHoto.getHeight(), Image.SCALE_SMOOTH);
        MatriceSuiv.setIcon(new javax.swing.ImageIcon(imFit));
        getSelectedImage= "./Assets/upgma.png";
        imIco = new ImageIcon(getSelectedImage);
        imFit = imIco.getImage();
        imgFit = imFit.getScaledInstance(PHoto.getWidth(), PHoto.getHeight(), Image.SCALE_SMOOTH);
        upgmabtn.setIcon(new javax.swing.ImageIcon(imFit));
        getSelectedImage= "./Assets/arbre.png";
        imIco = new ImageIcon(getSelectedImage);
        imFit = imIco.getImage();
        imgFit = imFit.getScaledInstance(PHoto.getWidth(), PHoto.getHeight(), Image.SCALE_SMOOTH);
        btnTree.setIcon(new javax.swing.ImageIcon(imFit));
        getSelectedImage= "./Assets/ajouter.png";
        imIco = new ImageIcon(getSelectedImage);
        imFit = imIco.getImage();
        imgFit = imFit.getScaledInstance(PHoto.getWidth(), PHoto.getHeight(), Image.SCALE_SMOOTH);
        btnAjout.setIcon(new javax.swing.ImageIcon(imFit));
        getSelectedImage= "./Assets/enlever.png";
        imIco = new ImageIcon(getSelectedImage);
        imFit = imIco.getImage();
        imgFit = imFit.getScaledInstance(PHoto.getWidth(), PHoto.getHeight(), Image.SCALE_SMOOTH);
        btnEnlev.setIcon(new javax.swing.ImageIcon(imFit));
        getSelectedImage= "./Assets/comp.png";
        imIco = new ImageIcon(getSelectedImage);
        imFit = imIco.getImage();
        imgFit = imFit.getScaledInstance(PHoto.getWidth(), PHoto.getHeight(), Image.SCALE_SMOOTH);
        btn2ndProj.setIcon(new javax.swing.ImageIcon(imFit));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        Background = new javax.swing.JPanel();
        tree = new javax.swing.JScrollPane();
        Exit = new javax.swing.JLabel();
        EspeceModel model = new EspeceModel();
        model.init();
        EspeceModelPainter painter = new EspeceModelPainter();
        jScrollPaneList1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>(model);
        matrice = new javax.swing.JLabel();
        MatriceSuiv = new javax.swing.JLabel();
        upgmabtn = new javax.swing.JLabel();
        jScrollPaneList2 = new javax.swing.JScrollPane();
        EspeceModel model2 = new EspeceModel();
        EspeceModelPainter painter2 = new EspeceModelPainter();
        jList2 = new javax.swing.JList<>(model2);
        btnTree = new javax.swing.JLabel();
        btnAjout = new javax.swing.JLabel();
        btnEnlev = new javax.swing.JLabel();
        btn2ndProj = new javax.swing.JLabel();
        PHoto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);

        Background.setBackground(new java.awt.Color(204, 255, 255));
        Background.setPreferredSize(new java.awt.Dimension(1200, 720));
        tree.setBorder(null);

        Exit.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Exit.setText("X");
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ExitMousePressed(evt);
            }
        });

        jScrollPaneList1.setBorder(null);

        jList1.setCellRenderer(painter);
        jList1.setVisibleRowCount(4);
        jScrollPaneList1.setViewportView(jList1);


        matrice.setBackground(new java.awt.Color(153, 255, 102));


        MatriceSuiv.setBackground(new java.awt.Color(51, 255, 51));
        //MatriceSuiv.setOpaque(true);
        MatriceSuiv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MatriceSuivMousePressed(evt);
            }
        });

        upgmabtn.setBackground(new java.awt.Color(0, 255, 0));

        upgmabtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                try {
                    upgmabtnMousePressed(evt);
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                }
            }
        });
        jList2.setCellRenderer(painter2);
        jList2.setVisibleRowCount(4);
        jScrollPaneList2.setViewportView(jList2);
        btnTree.setBackground(new java.awt.Color(0, 0, 255));

        btnTree.setOpaque(true);
        btnTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnTreeMousePressed(evt);
            }
        });
        btnAjout.setBackground(new java.awt.Color(51, 255, 0));
        btnAjout.setOpaque(true);
        btnAjout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAjoutMousePressed(evt);
            }
        });
        btnEnlev.setBackground(new java.awt.Color(51, 255, 0));
        btnEnlev.setOpaque(true);
        btnEnlev.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnEnlevMousePressed(evt);
            }
        });
        btn2ndProj.setBackground(new java.awt.Color(0, 255, 102));
        btn2ndProj.setOpaque(true);
        btn2ndProj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn2ndProjMousePressed(evt);
            }
        });

        PHoto.setToolTipText("");
        PHoto.setMaximumSize(new java.awt.Dimension(1280, 720));
        PHoto.setMinimumSize(new java.awt.Dimension(400, 400));
        PHoto.setPreferredSize(new java.awt.Dimension(1280, 720));

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
                BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(tree, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(149, 149, 149)
                                .addComponent(MatriceSuiv, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(443, 443, 443)
                                .addComponent(upgmabtn, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(318, 318, 318)
                                .addComponent(btnTree, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(1180, 1180, 1180)
                                .addComponent(Exit))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(318, 318, 318)
                                .addComponent(btn2ndProj, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jScrollPaneList1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(445, 445, 445)
                                .addComponent(matrice, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(443, 443, 443)
                                .addComponent(jScrollPaneList2, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(318, 318, 318)
                                .addComponent(btnEnlev, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(318, 318, 318)
                                .addComponent(btnAjout, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(PHoto, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        BackgroundLayout.setVerticalGroup(
                BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tree, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(BackgroundLayout.createSequentialGroup()
                                                .addGap(352, 352, 352)
                                                .addComponent(MatriceSuiv, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(230, 230, 230)
                                .addComponent(upgmabtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(193, 193, 193)
                                .addComponent(btnTree, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(Exit)
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(547, 547, 547)
                                .addComponent(btn2ndProj, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(478, 478, 478)
                                .addComponent(jScrollPaneList1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(matrice, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(475, 475, 475)
                                .addComponent(jScrollPaneList2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(611, 611, 611)
                                .addComponent(btnEnlev, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(478, 478, 478)
                                .addComponent(btnAjout, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(PHoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>

    private void ExitMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        System.exit(0);
    }

    private void MatriceSuivMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        MatriceFrame fenetre = new MatriceFrame();
        fenetre.setVisible(true);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    private void upgmabtnMousePressed(java.awt.event.MouseEvent evt) throws FileNotFoundException{
        // TODO add your handling code here:
        this.list = new ArrayList(jList2.getModel().getSize());
        for (int i = 0; i < jList2.getModel().getSize(); i++) {
            list.add(jList2.getModel().getElementAt(i));
        }
        //-----------------------------------------------------------------------------------
        ArrayList<String> L_nom= new ArrayList<String>();//Liste des noms des especes
        ArrayList<String> L_seq= new ArrayList<String>();//Liste des sequence des especes

        for(int i = 0; i < list.size(); i++)//remplissage liste noms
        {
            L_nom.add(list.get(i).toString());
        }

        FileInputStream file = new FileInputStream("src/main/resources/file-DNA.txt");
        Scanner sc = new Scanner(file);
        while(sc.hasNextLine())
        {
            String[] s = sc.nextLine().split(":");
            for(int i=0;i<L_nom.size();i++)
            {
                if(L_nom.get(i).equals(s[1])) {
                    L_seq.add(s[2]);

                }
            }
        }
        UPGMA U= null;
        GrandModele Gm=null;
        try {
            Gm=new GrandModele(L_nom, L_seq, -2, -1, 1, "adn");
        } catch (IOException var4) {
            var4.printStackTrace();
        }

        try
        {
            U = new UPGMA(Gm,L_nom);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        U.CreationArbPhylo();
        //Ajout de grand model
        U.AfficherlArb();
        String getSelectedImage = "./images/Matrice_0.png";
        ImageIcon imIco = new ImageIcon(getSelectedImage);
        Image imFit = imIco.getImage();
        Image imgFit = imFit.getScaledInstance(matrice.getWidth(), matrice.getHeight(), Image.SCALE_SMOOTH);
        matrice.setIcon(new ImageIcon(imgFit));
    }

    private void btnTreeMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        DefaultMutableTreeNode root=new DefaultMutableTreeNode("Arbre Phylogénétique");

        creaTreeString(UPGMA.lArb.get(UPGMA.lArb.size()-1).get(0),l1,nodes1);
        creaTreeString(UPGMA.lArb.get(UPGMA.lArb.size()-1).get(1),l2,nodes2);

        int i=0;

        while (i<l1.size()-2)
        {
            nodes1.get(i).add(nodes1.get(i+1));
            nodes1.get(i).add(nodes1.get(i+2));
            i++;
            i++;
        }
        int j=0;
        while (j<l2.size()-2)
        {
            nodes2.get(j).add(nodes2.get(j+1));
            nodes2.get(j).add(nodes2.get(j+2));
            j++;
            j++;
        }
        root.add(nodes1.get(0));
        root.add(nodes2.get(0));

        JTree treee=new JTree(root);
        tree.setViewportView(treee);
    }
    EspeceModel dlm = new EspeceModel();
    private void btnAjoutMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        dlm.addElement(jList1.getSelectedValue());
        jList2.setModel(dlm);
    }

    private void btn2ndProjMousePressed(java.awt.event.MouseEvent evt) {
         try {
            new FenetreFusion(Gm, "adn");
        }catch(IOException e){e.printStackTrace();}
    }

    private void btnEnlevMousePressed(java.awt.event.MouseEvent evt) {
        dlm.removeElementAt(jList2.getSelectedIndex());
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify
    private javax.swing.JPanel Background;
    private javax.swing.JLabel Exit;
    private javax.swing.JLabel MatriceSuiv;
    private javax.swing.JLabel PHoto;
    private javax.swing.JLabel btn2ndProj;
    private javax.swing.JLabel btnAjout;
    private javax.swing.JLabel btnEnlev;
    private javax.swing.JLabel btnTree;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPaneList1;
    private javax.swing.JScrollPane jScrollPaneList2;
    private javax.swing.JLabel matrice;
    private javax.swing.JScrollPane tree;
    private javax.swing.JLabel upgmabtn;
    private ArrayList list;
    // End of variables declaration
}
